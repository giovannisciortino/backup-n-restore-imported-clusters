---

- name: Get Cluster information
  kubernetes.core.k8s_cluster_info:
    context: "{{ HUB_CONTEXT }}"
    invalidate_cache: False
  register: api_status


- name: Creating Restore CRD to trigger restoring when 2.4.4
  kubernetes.core.k8s:
    context: "{{ HUB_CONTEXT }}"
    state: present
    template:
      - path: "restore-hub_2.4.4.yml"
  when: MCH_VERSION | regex_search("^2\.4\.(.)$")

- name: Creating Restore CRD to trigger restoring when 2.5.0
  kubernetes.core.k8s:
    context: "{{ HUB_CONTEXT }}"
    state: present
    template:
      - path: "restore-hub_2.5.0.yml"
  when: MCH_VERSION | regex_search("^2\.5\.(.)$")"

#TODO  detect when restore is over. In general it's faster than 20s. Need to speed-up this.
- name: Let's pause 59s to let restore running
  wait_for:
    timeout: 59
#TODO: replace with a check condition

- name: Get managed clusters
  kubernetes.core.k8s_info:
    context: "{{ HUB_CONTEXT }}"
    api_version: cluster.open-cluster-management.io/v1
    kind: ManagedCluster
    label_selectors:
      - velero.io/restore-name #To selected only restored clusters
  register: restored_managedclusters

# Iterate over restored managed clusters and collect their names.  We skip the already Joined ones
- set_fact: mc_lists="{{ (mc_lists | default([])) + ([ mc_item.metadata.name ])}}"
  loop: "{{ restored_managedclusters.resources }}"
  loop_control:
    loop_var: mc_item
  when: mc_item.status.conditions is defined  and "ManagedClusterAvailable" not in (mc_item.status.conditions | map(attribute='reason'))

- name: re-import Kubernetes cluster
  include_tasks: ../roles/import-managedcluster/tasks/main.yml
  vars:
    MANAGED_CLUSTER_NAME: "{{ cluster_name }}"
  loop: "{{ mc_lists }}"
  loop_control:
    loop_var: cluster_name
  when: mc_lists is defined
